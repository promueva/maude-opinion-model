***(
 
 Analysis with DGroot
***)

load semantics .

mod VACCINES is
    pr REW-RELATION-UPDATE . 
    eq EPSILON = 0.00001 .
    subsort Nat < Agent .


    vars S L R : State .

    op nodes   : -> SetOpinion .
    op edges   : -> SetEdge .
    op initnet : -> Network .
    ---          a            b            c            d            e            f
    eq nodes = < 0 : 0.0 >, < 1 : 0.1 >, < 2 : 0.15 >, < 3 : 0.82 >, < 4 : 0.89 >, < 5  : 0.92 > .
    eq edges = < ( 5 , 0) : 1.0 > ,
               < ( 0 , 1) : 0.6 > ,
               < ( 1 , 3) : 0.6 > ,
               < ( 3 , 5) : 0.4 > ,
               < ( 3 , 2) : 0.2 > ,
               < ( 0 , 2) : 0.4 > ,
               < ( 2 , 4) : 0.6 > ,
               < ( 4 , 5) : 0.6 > ,
               --- Self loops
               < (1 , 1) : 1.0 >,
               < (2 , 2) : 1.0 > ,
               < (3 , 3) : 1.0 > ,
               < (4 , 4) : 1.0 > .

    eq initnet =  < nodes: nodes ; edges: edges >  .

    op init : -> State .
    eq init =  initnet  in step: 0 comm: 0 edge-sel: empty .
endm


mod TEST is
    pr VACCINES .

    --- --------------------
    var STATE   : State .
    var SETEDGE : SetEdge .
    var AG      : Agent .
    --- --------------------

    eq moduleName = 'TEST .
    eq model = deGroot .
    eq update(STATE, SETEDGE, AG) = update-dgroot-CB(STATE, SETEDGE, AG) .

endm

eof 

--- Consensus and number of steps in Degroot:
search  init =>* STATE such that consensus(STATE) .

Consensus:  0 : 0.4829
Steps: 24
Communications: 192

